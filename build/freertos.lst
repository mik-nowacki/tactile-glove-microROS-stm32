ARM GAS  /tmp/ccwprL5w.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.switchMuxPin,"ax",%progbits
  20              		.align	1
  21              		.global	switchMuxPin
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	switchMuxPin:
  27              	.LVL0:
  28              	.LFB243:
  29              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** #include "adc.h"
  29:Core/Src/freertos.c **** #include "dma.h"
ARM GAS  /tmp/ccwprL5w.s 			page 2


  30:Core/Src/freertos.c **** #include "usart.h"
  31:Core/Src/freertos.c **** #include "gpio.h"
  32:Core/Src/freertos.c **** #include <math.h>
  33:Core/Src/freertos.c **** 
  34:Core/Src/freertos.c **** #include <rcl/rcl.h>
  35:Core/Src/freertos.c **** #include <rcl/error_handling.h>
  36:Core/Src/freertos.c **** #include <rclc/rclc.h>
  37:Core/Src/freertos.c **** #include <rclc/executor.h>
  38:Core/Src/freertos.c **** #include <uxr/client/transport.h>
  39:Core/Src/freertos.c **** #include <rmw_microxrcedds_c/config.h>
  40:Core/Src/freertos.c **** #include <rmw_microros/rmw_microros.h>
  41:Core/Src/freertos.c **** 
  42:Core/Src/freertos.c **** #include <std_msgs/msg/float64_multi_array.h>
  43:Core/Src/freertos.c **** #include <std_msgs/msg/multi_array_dimension.h>
  44:Core/Src/freertos.c **** /* USER CODE END Includes */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  47:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** /* USER CODE END PTD */
  50:Core/Src/freertos.c **** 
  51:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  52:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  53:Core/Src/freertos.c **** 
  54:Core/Src/freertos.c **** //#define RCCHECK(fn) { rcl_ret_t temp_rc = fn; if((temp_rc != RCL_RET_OK)){printf("Failed status o
  55:Core/Src/freertos.c **** //#define RCSOFTCHECK(fn) { rcl_ret_t temp_rc = fn; if((temp_rc != RCL_RET_OK)){printf("Failed stat
  56:Core/Src/freertos.c **** 
  57:Core/Src/freertos.c **** 
  58:Core/Src/freertos.c **** #define SELECT_PINS_PORT GPIOE
  59:Core/Src/freertos.c **** #define MUX1 0
  60:Core/Src/freertos.c **** #define MUX2 1
  61:Core/Src/freertos.c **** #define MUX3 2
  62:Core/Src/freertos.c **** #define NUMBER_OF_MULTIPLEXERS 3
  63:Core/Src/freertos.c **** #define NUMBER_OF_SENSORS 19
  64:Core/Src/freertos.c **** /* USER CODE END PD */
  65:Core/Src/freertos.c **** 
  66:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  67:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  68:Core/Src/freertos.c **** 
  69:Core/Src/freertos.c **** /* USER CODE END PM */
  70:Core/Src/freertos.c **** 
  71:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  72:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  73:Core/Src/freertos.c **** 
  74:Core/Src/freertos.c **** const int MUX_SELECT_PINS[NUMBER_OF_MULTIPLEXERS][3] = {{M1_S0_Pin, M1_S1_Pin, M1_S2_Pin}, {M2_S0_P
  75:Core/Src/freertos.c **** const int MULTIPLEXER_SENSORS[NUMBER_OF_MULTIPLEXERS] = {6, 6 ,7};  // Number of sensors connected 
  76:Core/Src/freertos.c **** const int MAX_RESOLUTION_VALUE = 4095;  // 12-bit ADC resolution
  77:Core/Src/freertos.c **** const int RESISTOR_47 = 4700;  // 4.7 kOhm resistor for smaller sensors
  78:Core/Src/freertos.c **** const int RESISTOR_22 = 2200;  // 2.2 kOhm resistor for bigger sensors
  79:Core/Src/freertos.c **** const double VOLT_IN = 2.95;  // STM32 supply voltage
  80:Core/Src/freertos.c **** 
  81:Core/Src/freertos.c **** // Linearization of resitance functions
  82:Core/Src/freertos.c **** const double A_BIG_RES = 2.5610009396757896;
  83:Core/Src/freertos.c **** const double B_BIG_RES = 1.022786463208377;
  84:Core/Src/freertos.c **** 
  85:Core/Src/freertos.c **** const double A_SMALL_RES = 0.13601158321717574;
  86:Core/Src/freertos.c **** const double B_SMALL_RES = 1.7434005445070226;
ARM GAS  /tmp/ccwprL5w.s 			page 3


  87:Core/Src/freertos.c **** 
  88:Core/Src/freertos.c **** std_msgs__msg__Float64MultiArray msg;  //  Message sent via micro-ROS
  89:Core/Src/freertos.c **** 
  90:Core/Src/freertos.c **** double voltageAOC = 0.0;
  91:Core/Src/freertos.c **** double current = 0.0;
  92:Core/Src/freertos.c **** double sensorResistance = 0.0;
  93:Core/Src/freertos.c **** double conductance = 0.0;
  94:Core/Src/freertos.c **** 
  95:Core/Src/freertos.c **** /* USER CODE END Variables */
  96:Core/Src/freertos.c **** /* Definitions for defaultTask */
  97:Core/Src/freertos.c **** osThreadId_t defaultTaskHandle;
  98:Core/Src/freertos.c **** const osThreadAttr_t defaultTask_attributes = {
  99:Core/Src/freertos.c ****   .name = "defaultTask",
 100:Core/Src/freertos.c ****   .stack_size = 3500 * 4,
 101:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
 102:Core/Src/freertos.c **** };
 103:Core/Src/freertos.c **** 
 104:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
 105:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
 106:Core/Src/freertos.c **** bool cubemx_transport_open(struct uxrCustomTransport * transport);
 107:Core/Src/freertos.c **** bool cubemx_transport_close(struct uxrCustomTransport * transport);
 108:Core/Src/freertos.c **** size_t cubemx_transport_write(struct uxrCustomTransport* transport, const uint8_t * buf, size_t len
 109:Core/Src/freertos.c **** size_t cubemx_transport_read(struct uxrCustomTransport* transport, uint8_t* buf, size_t len, int ti
 110:Core/Src/freertos.c **** 
 111:Core/Src/freertos.c **** void * microros_allocate(size_t size, void * state);
 112:Core/Src/freertos.c **** void microros_deallocate(void * pointer, void * state);
 113:Core/Src/freertos.c **** void * microros_reallocate(void * pointer, size_t size, void * state);
 114:Core/Src/freertos.c **** void * microros_zero_allocate(size_t number_of_elements, size_t size_of_element, void * state);
 115:Core/Src/freertos.c **** 
 116:Core/Src/freertos.c **** void switchMuxPin(int mux, int pin)
 117:Core/Src/freertos.c **** {
  30              		.loc 1 117 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 117 1 is_stmt 0 view .LVU1
  35 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 24
  38              		.cfi_offset 4, -24
  39              		.cfi_offset 5, -20
  40              		.cfi_offset 6, -16
  41              		.cfi_offset 7, -12
  42              		.cfi_offset 8, -8
  43              		.cfi_offset 14, -4
 118:Core/Src/freertos.c **** 	switch (pin){
  44              		.loc 1 118 2 is_stmt 1 view .LVU2
  45 0004 0729     		cmp	r1, #7
  46 0006 1DD8     		bhi	.L1
  47 0008 DFE801F0 		tbb	[pc, r1]
  48              	.L4:
  49 000c 04       		.byte	(.L11-.L4)/2
  50 000d 1E       		.byte	(.L10-.L4)/2
  51 000e 37       		.byte	(.L9-.L4)/2
  52 000f 50       		.byte	(.L8-.L4)/2
  53 0010 69       		.byte	(.L7-.L4)/2
  54 0011 82       		.byte	(.L6-.L4)/2
ARM GAS  /tmp/ccwprL5w.s 			page 4


  55 0012 9B       		.byte	(.L5-.L4)/2
  56 0013 B4       		.byte	(.L3-.L4)/2
  57              		.p2align 1
  58              	.L11:
 119:Core/Src/freertos.c **** 	case 0:
 120:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][0], GPIO_PIN_RESET);
  59              		.loc 1 120 3 view .LVU3
  60              		.loc 1 120 59 is_stmt 0 view .LVU4
  61 0014 644D     		ldr	r5, .L14
  62 0016 00EB4003 		add	r3, r0, r0, lsl #1
  63 001a 05EB8308 		add	r8, r5, r3, lsl #2
  64              		.loc 1 120 3 view .LVU5
  65 001e 634E     		ldr	r6, .L14+4
  66 0020 0022     		movs	r2, #0
  67 0022 35F82310 		ldrh	r1, [r5, r3, lsl #2]
  68              	.LVL1:
  69              		.loc 1 120 3 view .LVU6
  70 0026 3046     		mov	r0, r6
  71              	.LVL2:
  72              		.loc 1 120 3 view .LVU7
  73 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
  74              	.LVL3:
 121:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
  75              		.loc 1 121 3 is_stmt 1 view .LVU8
  76 002c 0022     		movs	r2, #0
  77 002e B8F80410 		ldrh	r1, [r8, #4]
  78 0032 3046     		mov	r0, r6
  79 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
  80              	.LVL4:
 122:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][2], GPIO_PIN_RESET);
  81              		.loc 1 122 3 view .LVU9
  82 0038 0022     		movs	r2, #0
  83 003a B8F80810 		ldrh	r1, [r8, #8]
  84 003e 3046     		mov	r0, r6
  85 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL5:
 123:Core/Src/freertos.c **** 		break;
  87              		.loc 1 123 3 view .LVU10
  88              	.L1:
 124:Core/Src/freertos.c **** 	case 1:
 125:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][0], GPIO_PIN_SET);
 126:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
 127:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][2], GPIO_PIN_RESET);
 128:Core/Src/freertos.c **** 		break;
 129:Core/Src/freertos.c **** 	case 2:
 130:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][0], GPIO_PIN_RESET);
 131:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 132:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][2], GPIO_PIN_RESET);
 133:Core/Src/freertos.c **** 		break;
 134:Core/Src/freertos.c **** 	case 3:
 135:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][0], GPIO_PIN_SET);
 136:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 137:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][2], GPIO_PIN_RESET);
 138:Core/Src/freertos.c **** 		break;
 139:Core/Src/freertos.c **** 	case 4:
 140:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][0], GPIO_PIN_RESET);
 141:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
ARM GAS  /tmp/ccwprL5w.s 			page 5


 142:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][2], GPIO_PIN_SET);
 143:Core/Src/freertos.c **** 		break;
 144:Core/Src/freertos.c **** 	case 5:
 145:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][0], GPIO_PIN_SET);
 146:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
 147:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][2], GPIO_PIN_SET);
 148:Core/Src/freertos.c **** 		break;
 149:Core/Src/freertos.c **** 	case 6:
 150:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][0], GPIO_PIN_RESET);
 151:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 152:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][2], GPIO_PIN_SET);
 153:Core/Src/freertos.c **** 		break;
 154:Core/Src/freertos.c **** 	case 7:
 155:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][0], GPIO_PIN_SET);
 156:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 157:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][2], GPIO_PIN_SET);
 158:Core/Src/freertos.c **** 		break;
 159:Core/Src/freertos.c **** 	}
 160:Core/Src/freertos.c **** 
 161:Core/Src/freertos.c **** }
  89              		.loc 1 161 1 is_stmt 0 view .LVU11
  90 0044 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
  91              	.LVL6:
  92              	.L10:
 125:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
  93              		.loc 1 125 3 is_stmt 1 view .LVU12
 125:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
  94              		.loc 1 125 59 is_stmt 0 view .LVU13
  95 0048 574D     		ldr	r5, .L14
  96 004a 00EB4003 		add	r3, r0, r0, lsl #1
  97 004e 05EB8308 		add	r8, r5, r3, lsl #2
 125:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
  98              		.loc 1 125 3 view .LVU14
  99 0052 564E     		ldr	r6, .L14+4
 100 0054 0122     		movs	r2, #1
 101 0056 35F82310 		ldrh	r1, [r5, r3, lsl #2]
 102              	.LVL7:
 125:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
 103              		.loc 1 125 3 view .LVU15
 104 005a 3046     		mov	r0, r6
 105              	.LVL8:
 125:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
 106              		.loc 1 125 3 view .LVU16
 107 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL9:
 126:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][2], GPIO_PIN_RESET);
 109              		.loc 1 126 3 is_stmt 1 view .LVU17
 110 0060 0022     		movs	r2, #0
 111 0062 B8F80410 		ldrh	r1, [r8, #4]
 112 0066 3046     		mov	r0, r6
 113 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 114              	.LVL10:
 127:Core/Src/freertos.c **** 		break;
 115              		.loc 1 127 3 view .LVU18
 116 006c 0022     		movs	r2, #0
 117 006e B8F80810 		ldrh	r1, [r8, #8]
 118 0072 3046     		mov	r0, r6
ARM GAS  /tmp/ccwprL5w.s 			page 6


 119 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL11:
 128:Core/Src/freertos.c **** 	case 2:
 121              		.loc 1 128 3 view .LVU19
 122 0078 E4E7     		b	.L1
 123              	.LVL12:
 124              	.L9:
 130:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 125              		.loc 1 130 3 view .LVU20
 130:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 126              		.loc 1 130 59 is_stmt 0 view .LVU21
 127 007a 4B4D     		ldr	r5, .L14
 128 007c 00EB4003 		add	r3, r0, r0, lsl #1
 129 0080 05EB8308 		add	r8, r5, r3, lsl #2
 130:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 130              		.loc 1 130 3 view .LVU22
 131 0084 494E     		ldr	r6, .L14+4
 132 0086 0022     		movs	r2, #0
 133 0088 35F82310 		ldrh	r1, [r5, r3, lsl #2]
 134              	.LVL13:
 130:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 135              		.loc 1 130 3 view .LVU23
 136 008c 3046     		mov	r0, r6
 137              	.LVL14:
 130:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 138              		.loc 1 130 3 view .LVU24
 139 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 140              	.LVL15:
 131:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][2], GPIO_PIN_RESET);
 141              		.loc 1 131 3 is_stmt 1 view .LVU25
 142 0092 0122     		movs	r2, #1
 143 0094 B8F80410 		ldrh	r1, [r8, #4]
 144 0098 3046     		mov	r0, r6
 145 009a FFF7FEFF 		bl	HAL_GPIO_WritePin
 146              	.LVL16:
 132:Core/Src/freertos.c **** 		break;
 147              		.loc 1 132 3 view .LVU26
 148 009e 0022     		movs	r2, #0
 149 00a0 B8F80810 		ldrh	r1, [r8, #8]
 150 00a4 3046     		mov	r0, r6
 151 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 152              	.LVL17:
 133:Core/Src/freertos.c **** 	case 3:
 153              		.loc 1 133 3 view .LVU27
 154 00aa CBE7     		b	.L1
 155              	.LVL18:
 156              	.L8:
 135:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 157              		.loc 1 135 3 view .LVU28
 135:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 158              		.loc 1 135 59 is_stmt 0 view .LVU29
 159 00ac 3E4D     		ldr	r5, .L14
 160 00ae 00EB4003 		add	r3, r0, r0, lsl #1
 161 00b2 05EB8308 		add	r8, r5, r3, lsl #2
 135:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 162              		.loc 1 135 3 view .LVU30
 163 00b6 3D4E     		ldr	r6, .L14+4
ARM GAS  /tmp/ccwprL5w.s 			page 7


 164 00b8 0122     		movs	r2, #1
 165 00ba 35F82310 		ldrh	r1, [r5, r3, lsl #2]
 166              	.LVL19:
 135:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 167              		.loc 1 135 3 view .LVU31
 168 00be 3046     		mov	r0, r6
 169              	.LVL20:
 135:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 170              		.loc 1 135 3 view .LVU32
 171 00c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL21:
 136:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][2], GPIO_PIN_RESET);
 173              		.loc 1 136 3 is_stmt 1 view .LVU33
 174 00c4 0122     		movs	r2, #1
 175 00c6 B8F80410 		ldrh	r1, [r8, #4]
 176 00ca 3046     		mov	r0, r6
 177 00cc FFF7FEFF 		bl	HAL_GPIO_WritePin
 178              	.LVL22:
 137:Core/Src/freertos.c **** 		break;
 179              		.loc 1 137 3 view .LVU34
 180 00d0 0022     		movs	r2, #0
 181 00d2 B8F80810 		ldrh	r1, [r8, #8]
 182 00d6 3046     		mov	r0, r6
 183 00d8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 184              	.LVL23:
 138:Core/Src/freertos.c **** 	case 4:
 185              		.loc 1 138 3 view .LVU35
 186 00dc B2E7     		b	.L1
 187              	.LVL24:
 188              	.L7:
 140:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
 189              		.loc 1 140 3 view .LVU36
 140:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
 190              		.loc 1 140 59 is_stmt 0 view .LVU37
 191 00de 324D     		ldr	r5, .L14
 192 00e0 00EB4003 		add	r3, r0, r0, lsl #1
 193 00e4 05EB8308 		add	r8, r5, r3, lsl #2
 140:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
 194              		.loc 1 140 3 view .LVU38
 195 00e8 304E     		ldr	r6, .L14+4
 196 00ea 0022     		movs	r2, #0
 197 00ec 35F82310 		ldrh	r1, [r5, r3, lsl #2]
 198              	.LVL25:
 140:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
 199              		.loc 1 140 3 view .LVU39
 200 00f0 3046     		mov	r0, r6
 201              	.LVL26:
 140:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
 202              		.loc 1 140 3 view .LVU40
 203 00f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 204              	.LVL27:
 141:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][2], GPIO_PIN_SET);
 205              		.loc 1 141 3 is_stmt 1 view .LVU41
 206 00f6 0022     		movs	r2, #0
 207 00f8 B8F80410 		ldrh	r1, [r8, #4]
 208 00fc 3046     		mov	r0, r6
 209 00fe FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccwprL5w.s 			page 8


 210              	.LVL28:
 142:Core/Src/freertos.c **** 		break;
 211              		.loc 1 142 3 view .LVU42
 212 0102 0122     		movs	r2, #1
 213 0104 B8F80810 		ldrh	r1, [r8, #8]
 214 0108 3046     		mov	r0, r6
 215 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 216              	.LVL29:
 143:Core/Src/freertos.c **** 	case 5:
 217              		.loc 1 143 3 view .LVU43
 218 010e 99E7     		b	.L1
 219              	.LVL30:
 220              	.L6:
 145:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
 221              		.loc 1 145 3 view .LVU44
 145:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
 222              		.loc 1 145 59 is_stmt 0 view .LVU45
 223 0110 254D     		ldr	r5, .L14
 224 0112 00EB4003 		add	r3, r0, r0, lsl #1
 225 0116 05EB8308 		add	r8, r5, r3, lsl #2
 145:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
 226              		.loc 1 145 3 view .LVU46
 227 011a 244E     		ldr	r6, .L14+4
 228 011c 0122     		movs	r2, #1
 229 011e 35F82310 		ldrh	r1, [r5, r3, lsl #2]
 230              	.LVL31:
 145:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
 231              		.loc 1 145 3 view .LVU47
 232 0122 3046     		mov	r0, r6
 233              	.LVL32:
 145:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_RESET);
 234              		.loc 1 145 3 view .LVU48
 235 0124 FFF7FEFF 		bl	HAL_GPIO_WritePin
 236              	.LVL33:
 146:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][2], GPIO_PIN_SET);
 237              		.loc 1 146 3 is_stmt 1 view .LVU49
 238 0128 0022     		movs	r2, #0
 239 012a B8F80410 		ldrh	r1, [r8, #4]
 240 012e 3046     		mov	r0, r6
 241 0130 FFF7FEFF 		bl	HAL_GPIO_WritePin
 242              	.LVL34:
 147:Core/Src/freertos.c **** 		break;
 243              		.loc 1 147 3 view .LVU50
 244 0134 0122     		movs	r2, #1
 245 0136 B8F80810 		ldrh	r1, [r8, #8]
 246 013a 3046     		mov	r0, r6
 247 013c FFF7FEFF 		bl	HAL_GPIO_WritePin
 248              	.LVL35:
 148:Core/Src/freertos.c **** 	case 6:
 249              		.loc 1 148 3 view .LVU51
 250 0140 80E7     		b	.L1
 251              	.LVL36:
 252              	.L5:
 150:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 253              		.loc 1 150 3 view .LVU52
 150:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 254              		.loc 1 150 59 is_stmt 0 view .LVU53
ARM GAS  /tmp/ccwprL5w.s 			page 9


 255 0142 194D     		ldr	r5, .L14
 256 0144 00EB4003 		add	r3, r0, r0, lsl #1
 257 0148 05EB8308 		add	r8, r5, r3, lsl #2
 150:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 258              		.loc 1 150 3 view .LVU54
 259 014c 174E     		ldr	r6, .L14+4
 260 014e 0022     		movs	r2, #0
 261 0150 35F82310 		ldrh	r1, [r5, r3, lsl #2]
 262              	.LVL37:
 150:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 263              		.loc 1 150 3 view .LVU55
 264 0154 3046     		mov	r0, r6
 265              	.LVL38:
 150:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 266              		.loc 1 150 3 view .LVU56
 267 0156 FFF7FEFF 		bl	HAL_GPIO_WritePin
 268              	.LVL39:
 151:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][2], GPIO_PIN_SET);
 269              		.loc 1 151 3 is_stmt 1 view .LVU57
 270 015a 0122     		movs	r2, #1
 271 015c B8F80410 		ldrh	r1, [r8, #4]
 272 0160 3046     		mov	r0, r6
 273 0162 FFF7FEFF 		bl	HAL_GPIO_WritePin
 274              	.LVL40:
 152:Core/Src/freertos.c **** 		break;
 275              		.loc 1 152 3 view .LVU58
 276 0166 0122     		movs	r2, #1
 277 0168 B8F80810 		ldrh	r1, [r8, #8]
 278 016c 3046     		mov	r0, r6
 279 016e FFF7FEFF 		bl	HAL_GPIO_WritePin
 280              	.LVL41:
 153:Core/Src/freertos.c **** 	case 7:
 281              		.loc 1 153 3 view .LVU59
 282 0172 67E7     		b	.L1
 283              	.LVL42:
 284              	.L3:
 155:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 285              		.loc 1 155 3 view .LVU60
 155:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 286              		.loc 1 155 59 is_stmt 0 view .LVU61
 287 0174 0C4D     		ldr	r5, .L14
 288 0176 00EB4003 		add	r3, r0, r0, lsl #1
 289 017a 05EB8308 		add	r8, r5, r3, lsl #2
 155:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 290              		.loc 1 155 3 view .LVU62
 291 017e 0B4E     		ldr	r6, .L14+4
 292 0180 0122     		movs	r2, #1
 293 0182 35F82310 		ldrh	r1, [r5, r3, lsl #2]
 294              	.LVL43:
 155:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 295              		.loc 1 155 3 view .LVU63
 296 0186 3046     		mov	r0, r6
 297              	.LVL44:
 155:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][1], GPIO_PIN_SET);
 298              		.loc 1 155 3 view .LVU64
 299 0188 FFF7FEFF 		bl	HAL_GPIO_WritePin
 300              	.LVL45:
ARM GAS  /tmp/ccwprL5w.s 			page 10


 156:Core/Src/freertos.c **** 		HAL_GPIO_WritePin(SELECT_PINS_PORT, MUX_SELECT_PINS[mux][2], GPIO_PIN_SET);
 301              		.loc 1 156 3 is_stmt 1 view .LVU65
 302 018c 0122     		movs	r2, #1
 303 018e B8F80410 		ldrh	r1, [r8, #4]
 304 0192 3046     		mov	r0, r6
 305 0194 FFF7FEFF 		bl	HAL_GPIO_WritePin
 306              	.LVL46:
 157:Core/Src/freertos.c **** 		break;
 307              		.loc 1 157 3 view .LVU66
 308 0198 0122     		movs	r2, #1
 309 019a B8F80810 		ldrh	r1, [r8, #8]
 310 019e 3046     		mov	r0, r6
 311 01a0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 312              	.LVL47:
 158:Core/Src/freertos.c **** 	}
 313              		.loc 1 158 3 view .LVU67
 314              		.loc 1 161 1 is_stmt 0 view .LVU68
 315 01a4 4EE7     		b	.L1
 316              	.L15:
 317 01a6 00BF     		.align	2
 318              	.L14:
 319 01a8 00000000 		.word	.LANCHOR0
 320 01ac 00100240 		.word	1073876992
 321              		.cfi_endproc
 322              	.LFE243:
 324              		.section	.text.readM1Analog,"ax",%progbits
 325              		.align	1
 326              		.global	readM1Analog
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 331              	readM1Analog:
 332              	.LFB244:
 162:Core/Src/freertos.c **** 
 163:Core/Src/freertos.c **** 
 164:Core/Src/freertos.c **** uint16_t readM1Analog()
 165:Core/Src/freertos.c **** {
 333              		.loc 1 165 1 is_stmt 1 view -0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337 0000 10B5     		push	{r4, lr}
 338              	.LCFI1:
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 4, -8
 341              		.cfi_offset 14, -4
 166:Core/Src/freertos.c **** 	uint16_t analogRead = 0;
 342              		.loc 1 166 2 view .LVU70
 343              	.LVL48:
 167:Core/Src/freertos.c **** 
 168:Core/Src/freertos.c **** 	HAL_ADC_Start(&hadc3);
 344              		.loc 1 168 2 view .LVU71
 345 0002 0A4C     		ldr	r4, .L21
 346 0004 2046     		mov	r0, r4
 347 0006 FFF7FEFF 		bl	HAL_ADC_Start
 348              	.LVL49:
 169:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccwprL5w.s 			page 11


 170:Core/Src/freertos.c **** 	if(HAL_ADC_PollForConversion(&hadc3, 10) == HAL_OK)
 349              		.loc 1 170 2 view .LVU72
 350              		.loc 1 170 5 is_stmt 0 view .LVU73
 351 000a 0A21     		movs	r1, #10
 352 000c 2046     		mov	r0, r4
 353 000e FFF7FEFF 		bl	HAL_ADC_PollForConversion
 354              	.LVL50:
 355              		.loc 1 170 4 view .LVU74
 356 0012 28B1     		cbz	r0, .L20
 166:Core/Src/freertos.c **** 
 357              		.loc 1 166 11 view .LVU75
 358 0014 0024     		movs	r4, #0
 359              	.LVL51:
 360              	.L17:
 171:Core/Src/freertos.c **** 	  {
 172:Core/Src/freertos.c **** 	  analogRead = HAL_ADC_GetValue(&hadc3);
 173:Core/Src/freertos.c **** 	  }
 174:Core/Src/freertos.c **** 
 175:Core/Src/freertos.c **** 	HAL_ADC_Stop(&hadc3);
 361              		.loc 1 175 2 is_stmt 1 view .LVU76
 362 0016 0548     		ldr	r0, .L21
 363 0018 FFF7FEFF 		bl	HAL_ADC_Stop
 364              	.LVL52:
 176:Core/Src/freertos.c **** 
 177:Core/Src/freertos.c **** 	return analogRead;
 365              		.loc 1 177 2 view .LVU77
 178:Core/Src/freertos.c **** }
 366              		.loc 1 178 1 is_stmt 0 view .LVU78
 367 001c 2046     		mov	r0, r4
 368 001e 10BD     		pop	{r4, pc}
 369              	.LVL53:
 370              	.L20:
 172:Core/Src/freertos.c **** 	  }
 371              		.loc 1 172 4 is_stmt 1 view .LVU79
 172:Core/Src/freertos.c **** 	  }
 372              		.loc 1 172 17 is_stmt 0 view .LVU80
 373 0020 2046     		mov	r0, r4
 374 0022 FFF7FEFF 		bl	HAL_ADC_GetValue
 375              	.LVL54:
 172:Core/Src/freertos.c **** 	  }
 376              		.loc 1 172 15 view .LVU81
 377 0026 84B2     		uxth	r4, r0
 378              	.LVL55:
 172:Core/Src/freertos.c **** 	  }
 379              		.loc 1 172 15 view .LVU82
 380 0028 F5E7     		b	.L17
 381              	.L22:
 382 002a 00BF     		.align	2
 383              	.L21:
 384 002c 00000000 		.word	hadc3
 385              		.cfi_endproc
 386              	.LFE244:
 388              		.section	.text.readM2Analog,"ax",%progbits
 389              		.align	1
 390              		.global	readM2Analog
 391              		.syntax unified
 392              		.thumb
ARM GAS  /tmp/ccwprL5w.s 			page 12


 393              		.thumb_func
 395              	readM2Analog:
 396              	.LFB245:
 179:Core/Src/freertos.c **** 
 180:Core/Src/freertos.c **** 
 181:Core/Src/freertos.c **** uint16_t readM2Analog()
 182:Core/Src/freertos.c **** {
 397              		.loc 1 182 1 is_stmt 1 view -0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401 0000 10B5     		push	{r4, lr}
 402              	.LCFI2:
 403              		.cfi_def_cfa_offset 8
 404              		.cfi_offset 4, -8
 405              		.cfi_offset 14, -4
 183:Core/Src/freertos.c **** 	uint16_t analogRead = 0;
 406              		.loc 1 183 2 view .LVU84
 407              	.LVL56:
 184:Core/Src/freertos.c **** 
 185:Core/Src/freertos.c **** 	HAL_ADC_Start(&hadc2);
 408              		.loc 1 185 2 view .LVU85
 409 0002 0A4C     		ldr	r4, .L28
 410 0004 2046     		mov	r0, r4
 411 0006 FFF7FEFF 		bl	HAL_ADC_Start
 412              	.LVL57:
 186:Core/Src/freertos.c **** 
 187:Core/Src/freertos.c **** 	if(HAL_ADC_PollForConversion(&hadc2, 10) == HAL_OK)
 413              		.loc 1 187 2 view .LVU86
 414              		.loc 1 187 5 is_stmt 0 view .LVU87
 415 000a 0A21     		movs	r1, #10
 416 000c 2046     		mov	r0, r4
 417 000e FFF7FEFF 		bl	HAL_ADC_PollForConversion
 418              	.LVL58:
 419              		.loc 1 187 4 view .LVU88
 420 0012 28B1     		cbz	r0, .L27
 183:Core/Src/freertos.c **** 
 421              		.loc 1 183 11 view .LVU89
 422 0014 0024     		movs	r4, #0
 423              	.LVL59:
 424              	.L24:
 188:Core/Src/freertos.c **** 	  {
 189:Core/Src/freertos.c **** 		analogRead = HAL_ADC_GetValue(&hadc2);
 190:Core/Src/freertos.c **** 	  }
 191:Core/Src/freertos.c **** 
 192:Core/Src/freertos.c **** 	HAL_ADC_Stop(&hadc2);
 425              		.loc 1 192 2 is_stmt 1 view .LVU90
 426 0016 0548     		ldr	r0, .L28
 427 0018 FFF7FEFF 		bl	HAL_ADC_Stop
 428              	.LVL60:
 193:Core/Src/freertos.c **** 
 194:Core/Src/freertos.c **** 	return analogRead;
 429              		.loc 1 194 2 view .LVU91
 195:Core/Src/freertos.c **** }
 430              		.loc 1 195 1 is_stmt 0 view .LVU92
 431 001c 2046     		mov	r0, r4
 432 001e 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccwprL5w.s 			page 13


 433              	.LVL61:
 434              	.L27:
 189:Core/Src/freertos.c **** 	  }
 435              		.loc 1 189 3 is_stmt 1 view .LVU93
 189:Core/Src/freertos.c **** 	  }
 436              		.loc 1 189 16 is_stmt 0 view .LVU94
 437 0020 2046     		mov	r0, r4
 438 0022 FFF7FEFF 		bl	HAL_ADC_GetValue
 439              	.LVL62:
 189:Core/Src/freertos.c **** 	  }
 440              		.loc 1 189 14 view .LVU95
 441 0026 84B2     		uxth	r4, r0
 442              	.LVL63:
 189:Core/Src/freertos.c **** 	  }
 443              		.loc 1 189 14 view .LVU96
 444 0028 F5E7     		b	.L24
 445              	.L29:
 446 002a 00BF     		.align	2
 447              	.L28:
 448 002c 00000000 		.word	hadc2
 449              		.cfi_endproc
 450              	.LFE245:
 452              		.section	.text.readM3Analog,"ax",%progbits
 453              		.align	1
 454              		.global	readM3Analog
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 459              	readM3Analog:
 460              	.LFB246:
 196:Core/Src/freertos.c **** 
 197:Core/Src/freertos.c **** 
 198:Core/Src/freertos.c **** uint16_t readM3Analog()
 199:Core/Src/freertos.c **** {
 461              		.loc 1 199 1 is_stmt 1 view -0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465 0000 10B5     		push	{r4, lr}
 466              	.LCFI3:
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 4, -8
 469              		.cfi_offset 14, -4
 200:Core/Src/freertos.c **** 	uint16_t analogRead = 0;
 470              		.loc 1 200 2 view .LVU98
 471              	.LVL64:
 201:Core/Src/freertos.c **** 
 202:Core/Src/freertos.c **** 	HAL_ADC_Start(&hadc1);
 472              		.loc 1 202 2 view .LVU99
 473 0002 0A4C     		ldr	r4, .L35
 474 0004 2046     		mov	r0, r4
 475 0006 FFF7FEFF 		bl	HAL_ADC_Start
 476              	.LVL65:
 203:Core/Src/freertos.c **** 
 204:Core/Src/freertos.c **** 	if(HAL_ADC_PollForConversion(&hadc1, 10) == HAL_OK)
 477              		.loc 1 204 2 view .LVU100
 478              		.loc 1 204 5 is_stmt 0 view .LVU101
ARM GAS  /tmp/ccwprL5w.s 			page 14


 479 000a 0A21     		movs	r1, #10
 480 000c 2046     		mov	r0, r4
 481 000e FFF7FEFF 		bl	HAL_ADC_PollForConversion
 482              	.LVL66:
 483              		.loc 1 204 4 view .LVU102
 484 0012 28B1     		cbz	r0, .L34
 200:Core/Src/freertos.c **** 
 485              		.loc 1 200 11 view .LVU103
 486 0014 0024     		movs	r4, #0
 487              	.LVL67:
 488              	.L31:
 205:Core/Src/freertos.c **** 	  {
 206:Core/Src/freertos.c **** 		analogRead = HAL_ADC_GetValue(&hadc1);
 207:Core/Src/freertos.c **** 	  }
 208:Core/Src/freertos.c **** 
 209:Core/Src/freertos.c **** 	HAL_ADC_Stop(&hadc1);
 489              		.loc 1 209 2 is_stmt 1 view .LVU104
 490 0016 0548     		ldr	r0, .L35
 491 0018 FFF7FEFF 		bl	HAL_ADC_Stop
 492              	.LVL68:
 210:Core/Src/freertos.c **** 
 211:Core/Src/freertos.c **** 	return analogRead;
 493              		.loc 1 211 2 view .LVU105
 212:Core/Src/freertos.c **** }
 494              		.loc 1 212 1 is_stmt 0 view .LVU106
 495 001c 2046     		mov	r0, r4
 496 001e 10BD     		pop	{r4, pc}
 497              	.LVL69:
 498              	.L34:
 206:Core/Src/freertos.c **** 	  }
 499              		.loc 1 206 3 is_stmt 1 view .LVU107
 206:Core/Src/freertos.c **** 	  }
 500              		.loc 1 206 16 is_stmt 0 view .LVU108
 501 0020 2046     		mov	r0, r4
 502 0022 FFF7FEFF 		bl	HAL_ADC_GetValue
 503              	.LVL70:
 206:Core/Src/freertos.c **** 	  }
 504              		.loc 1 206 14 view .LVU109
 505 0026 84B2     		uxth	r4, r0
 506              	.LVL71:
 206:Core/Src/freertos.c **** 	  }
 507              		.loc 1 206 14 view .LVU110
 508 0028 F5E7     		b	.L31
 509              	.L36:
 510 002a 00BF     		.align	2
 511              	.L35:
 512 002c 00000000 		.word	hadc1
 513              		.cfi_endproc
 514              	.LFE246:
 516              		.global	__aeabi_ui2d
 517              		.global	__aeabi_dmul
 518              		.global	__aeabi_i2d
 519              		.global	__aeabi_ddiv
 520              		.global	__aeabi_dsub
 521              		.section	.text.calculateForce,"ax",%progbits
 522              		.align	1
 523              		.global	calculateForce
ARM GAS  /tmp/ccwprL5w.s 			page 15


 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 528              	calculateForce:
 529              	.LVL72:
 530              	.LFB247:
 213:Core/Src/freertos.c **** 
 214:Core/Src/freertos.c **** 
 215:Core/Src/freertos.c **** double calculateForce(uint16_t _analogRead, int _resistor)
 216:Core/Src/freertos.c **** {
 531              		.loc 1 216 1 is_stmt 1 view -0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              		.loc 1 216 1 is_stmt 0 view .LVU112
 536 0000 2DE9D043 		push	{r4, r6, r7, r8, r9, lr}
 537              	.LCFI4:
 538              		.cfi_def_cfa_offset 24
 539              		.cfi_offset 4, -24
 540              		.cfi_offset 6, -20
 541              		.cfi_offset 7, -16
 542              		.cfi_offset 8, -12
 543              		.cfi_offset 9, -8
 544              		.cfi_offset 14, -4
 545 0004 0C46     		mov	r4, r1
 217:Core/Src/freertos.c **** //  convert analogRead to Volt
 218:Core/Src/freertos.c **** 	voltageAOC = (double)_analogRead * (VOLT_IN / MAX_RESOLUTION_VALUE);  // 500mV max value
 546              		.loc 1 218 2 is_stmt 1 view .LVU113
 547              		.loc 1 218 15 is_stmt 0 view .LVU114
 548 0006 FFF7FEFF 		bl	__aeabi_ui2d
 549              	.LVL73:
 550              		.loc 1 218 35 view .LVU115
 551 000a 46A3     		adr	r3, .L42+76
 552 000c D3E90023 		ldrd	r2, [r3]
 553 0010 FFF7FEFF 		bl	__aeabi_dmul
 554              	.LVL74:
 555 0014 8046     		mov	r8, r0
 556 0016 8946     		mov	r9, r1
 557              		.loc 1 218 13 view .LVU116
 558 0018 3D4B     		ldr	r3, .L42+56
 559 001a C3E90089 		strd	r8, [r3]
 219:Core/Src/freertos.c **** 	current = voltageAOC / _resistor;
 560              		.loc 1 219 2 is_stmt 1 view .LVU117
 561              		.loc 1 219 23 is_stmt 0 view .LVU118
 562 001e 2046     		mov	r0, r4
 563 0020 FFF7FEFF 		bl	__aeabi_i2d
 564              	.LVL75:
 565 0024 0646     		mov	r6, r0
 566 0026 0F46     		mov	r7, r1
 567 0028 0246     		mov	r2, r0
 568 002a 0B46     		mov	r3, r1
 569 002c 4046     		mov	r0, r8
 570 002e 4946     		mov	r1, r9
 571 0030 FFF7FEFF 		bl	__aeabi_ddiv
 572              	.LVL76:
 573 0034 0246     		mov	r2, r0
 574 0036 0B46     		mov	r3, r1
ARM GAS  /tmp/ccwprL5w.s 			page 16


 575              		.loc 1 219 10 view .LVU119
 576 0038 3649     		ldr	r1, .L42+60
 577 003a C1E90023 		strd	r2, [r1]
 220:Core/Src/freertos.c **** 	sensorResistance = (VOLT_IN / current) - _resistor;
 578              		.loc 1 220 2 is_stmt 1 view .LVU120
 579              		.loc 1 220 30 is_stmt 0 view .LVU121
 580 003e 26A1     		adr	r1, .L42
 581 0040 D1E90001 		ldrd	r0, [r1]
 582 0044 FFF7FEFF 		bl	__aeabi_ddiv
 583              	.LVL77:
 584              		.loc 1 220 41 view .LVU122
 585 0048 3246     		mov	r2, r6
 586 004a 3B46     		mov	r3, r7
 587 004c FFF7FEFF 		bl	__aeabi_dsub
 588              	.LVL78:
 589 0050 0246     		mov	r2, r0
 590 0052 0B46     		mov	r3, r1
 591              		.loc 1 220 19 view .LVU123
 592 0054 3049     		ldr	r1, .L42+64
 593 0056 C1E90023 		strd	r2, [r1]
 221:Core/Src/freertos.c **** 	conductance = 1000000 / sensorResistance;
 594              		.loc 1 221 2 is_stmt 1 view .LVU124
 595              		.loc 1 221 24 is_stmt 0 view .LVU125
 596 005a 21A1     		adr	r1, .L42+8
 597 005c D1E90001 		ldrd	r0, [r1]
 598 0060 FFF7FEFF 		bl	__aeabi_ddiv
 599              	.LVL79:
 600 0064 41EC100B 		vmov	d0, r0, r1
 601              		.loc 1 221 14 view .LVU126
 602 0068 2C4B     		ldr	r3, .L42+68
 603 006a C3E90001 		strd	r0, [r3]
 222:Core/Src/freertos.c **** 
 223:Core/Src/freertos.c **** 	if (_resistor == RESISTOR_22) return ((A_BIG_RES * pow(conductance, B_BIG_RES)) / 1000) * 9.81;
 604              		.loc 1 223 2 is_stmt 1 view .LVU127
 605              		.loc 1 223 5 is_stmt 0 view .LVU128
 606 006e 40F69803 		movw	r3, #2200
 607 0072 9C42     		cmp	r4, r3
 608 0074 17D0     		beq	.L41
 224:Core/Src/freertos.c **** 	else return ((A_SMALL_RES * pow(conductance, B_SMALL_RES)) / 1000) * 9.81;
 609              		.loc 1 224 7 is_stmt 1 view .LVU129
 610              		.loc 1 224 30 is_stmt 0 view .LVU130
 611 0076 9FED1C1B 		vldr.64	d1, .L42+16
 612 007a FFF7FEFF 		bl	pow
 613              	.LVL80:
 614 007e 51EC100B 		vmov	r0, r1, d0
 615              		.loc 1 224 28 view .LVU131
 616 0082 1BA3     		adr	r3, .L42+24
 617 0084 D3E90023 		ldrd	r2, [r3]
 618 0088 FFF7FEFF 		bl	__aeabi_dmul
 619              	.LVL81:
 620              		.loc 1 224 61 view .LVU132
 621 008c 0022     		movs	r2, #0
 622 008e 244B     		ldr	r3, .L42+72
 623 0090 FFF7FEFF 		bl	__aeabi_ddiv
 624              	.LVL82:
 625              		.loc 1 224 69 view .LVU133
 626 0094 18A3     		adr	r3, .L42+32
ARM GAS  /tmp/ccwprL5w.s 			page 17


 627 0096 D3E90023 		ldrd	r2, [r3]
 628 009a FFF7FEFF 		bl	__aeabi_dmul
 629              	.LVL83:
 630 009e 41EC100B 		vmov	d0, r0, r1
 631              	.L37:
 225:Core/Src/freertos.c **** }
 632              		.loc 1 225 1 view .LVU134
 633 00a2 BDE8D083 		pop	{r4, r6, r7, r8, r9, pc}
 634              	.LVL84:
 635              	.L41:
 223:Core/Src/freertos.c **** 	else return ((A_SMALL_RES * pow(conductance, B_SMALL_RES)) / 1000) * 9.81;
 636              		.loc 1 223 32 is_stmt 1 discriminator 1 view .LVU135
 223:Core/Src/freertos.c **** 	else return ((A_SMALL_RES * pow(conductance, B_SMALL_RES)) / 1000) * 9.81;
 637              		.loc 1 223 53 is_stmt 0 discriminator 1 view .LVU136
 638 00a6 9FED161B 		vldr.64	d1, .L42+40
 639 00aa FFF7FEFF 		bl	pow
 640              	.LVL85:
 641 00ae 51EC100B 		vmov	r0, r1, d0
 223:Core/Src/freertos.c **** 	else return ((A_SMALL_RES * pow(conductance, B_SMALL_RES)) / 1000) * 9.81;
 642              		.loc 1 223 51 discriminator 1 view .LVU137
 643 00b2 15A3     		adr	r3, .L42+48
 644 00b4 D3E90023 		ldrd	r2, [r3]
 645 00b8 FFF7FEFF 		bl	__aeabi_dmul
 646              	.LVL86:
 223:Core/Src/freertos.c **** 	else return ((A_SMALL_RES * pow(conductance, B_SMALL_RES)) / 1000) * 9.81;
 647              		.loc 1 223 82 discriminator 1 view .LVU138
 648 00bc 0022     		movs	r2, #0
 649 00be 184B     		ldr	r3, .L42+72
 650 00c0 FFF7FEFF 		bl	__aeabi_ddiv
 651              	.LVL87:
 223:Core/Src/freertos.c **** 	else return ((A_SMALL_RES * pow(conductance, B_SMALL_RES)) / 1000) * 9.81;
 652              		.loc 1 223 90 discriminator 1 view .LVU139
 653 00c4 0CA3     		adr	r3, .L42+32
 654 00c6 D3E90023 		ldrd	r2, [r3]
 655 00ca FFF7FEFF 		bl	__aeabi_dmul
 656              	.LVL88:
 657 00ce 41EC100B 		vmov	d0, r0, r1
 658 00d2 E6E7     		b	.L37
 659              	.L43:
 660 00d4 AFF30080 		.align	3
 661              	.L42:
 662 00d8 9A999999 		.word	-1717986918
 663 00dc 99990740 		.word	1074239897
 664 00e0 00000000 		.word	0
 665 00e4 80842E41 		.word	1093567616
 666 00e8 B3C727F8 		.word	-131610701
 667 00ec F7E4FB3F 		.word	1073472759
 668 00f0 FFC0E5DA 		.word	-622477057
 669 00f4 D368C13F 		.word	1069639891
 670 00f8 1F85EB51 		.word	1374389535
 671 00fc B89E2340 		.word	1076076216
 672 0100 0258A456 		.word	1453611010
 673 0104 555DF03F 		.word	1072717141
 674 0108 5876870F 		.word	260535896
 675 010c EE7C0440 		.word	1074035950
 676 0110 00000000 		.word	.LANCHOR1
 677 0114 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/ccwprL5w.s 			page 18


 678 0118 00000000 		.word	.LANCHOR3
 679 011c 00000000 		.word	.LANCHOR4
 680 0120 00408F40 		.word	1083129856
 681 0124 7E46CE4A 		.word	1255032446
 682 0128 139B473F 		.word	1061657363
 683              		.cfi_endproc
 684              	.LFE247:
 686              		.section	.text.readMultiplexerInput,"ax",%progbits
 687              		.align	1
 688              		.global	readMultiplexerInput
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 693              	readMultiplexerInput:
 694              	.LVL89:
 695              	.LFB248:
 226:Core/Src/freertos.c **** 
 227:Core/Src/freertos.c **** 
 228:Core/Src/freertos.c **** void readMultiplexerInput(int mux)
 229:Core/Src/freertos.c **** {
 696              		.loc 1 229 1 is_stmt 1 view -0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              		.loc 1 229 1 is_stmt 0 view .LVU141
 701 0000 70B5     		push	{r4, r5, r6, lr}
 702              	.LCFI5:
 703              		.cfi_def_cfa_offset 16
 704              		.cfi_offset 4, -16
 705              		.cfi_offset 5, -12
 706              		.cfi_offset 6, -8
 707              		.cfi_offset 14, -4
 708 0002 0446     		mov	r4, r0
 230:Core/Src/freertos.c **** 	for (int pin = 0; pin < MULTIPLEXER_SENSORS[mux]; pin++) // Starting from 1 because of the circuit
 709              		.loc 1 230 2 is_stmt 1 view .LVU142
 710              	.LBB2:
 711              		.loc 1 230 7 view .LVU143
 712              	.LVL90:
 713              		.loc 1 230 11 is_stmt 0 view .LVU144
 714 0004 0025     		movs	r5, #0
 715              		.loc 1 230 2 view .LVU145
 716 0006 0DE0     		b	.L45
 717              	.LVL91:
 718              	.L46:
 231:Core/Src/freertos.c **** 	{
 232:Core/Src/freertos.c ****       switchMuxPin(mux, pin+1); // Y1 is the first pin used on the multiplexer
 233:Core/Src/freertos.c **** 	  switch(mux)
 234:Core/Src/freertos.c **** 	  {  // Read ADC pin corresponding to the given multiplexer
 235:Core/Src/freertos.c **** 	  case MUX1:
 236:Core/Src/freertos.c **** 		  msg.data.data[pin] = calculateForce(readM1Analog(), RESISTOR_47); break;
 237:Core/Src/freertos.c **** 	  case MUX2:
 238:Core/Src/freertos.c **** 		  msg.data.data[pin + MUX2 * MULTIPLEXER_SENSORS[MUX1]] = calculateForce(readM2Analog(), RESISTOR
 719              		.loc 1 238 5 is_stmt 1 view .LVU146
 720              		.loc 1 238 61 is_stmt 0 view .LVU147
 721 0008 FFF7FEFF 		bl	readM2Analog
 722              	.LVL92:
 723              		.loc 1 238 13 view .LVU148
ARM GAS  /tmp/ccwprL5w.s 			page 19


 724 000c 1B4B     		ldr	r3, .L52
 725 000e 1B69     		ldr	r3, [r3, #16]
 726              		.loc 1 238 23 view .LVU149
 727 0010 0635     		adds	r5, r5, #6
 728              	.LVL93:
 729              		.loc 1 238 18 view .LVU150
 730 0012 03EBC505 		add	r5, r3, r5, lsl #3
 731              	.LVL94:
 732              		.loc 1 238 61 view .LVU151
 733 0016 41F25C21 		movw	r1, #4700
 734 001a FFF7FEFF 		bl	calculateForce
 735              	.LVL95:
 736              		.loc 1 238 59 view .LVU152
 737 001e 85ED000B 		vstr.64	d0, [r5]
 738              		.loc 1 238 106 is_stmt 1 view .LVU153
 739              	.L48:
 740              		.loc 1 238 106 is_stmt 0 view .LVU154
 741              	.LBE2:
 229:Core/Src/freertos.c **** 	for (int pin = 0; pin < MULTIPLEXER_SENSORS[mux]; pin++) // Starting from 1 because of the circuit
 742              		.loc 1 229 1 discriminator 1 view .LVU155
 743 0022 3546     		mov	r5, r6
 744              	.LVL96:
 745              	.L45:
 746              	.LBB3:
 230:Core/Src/freertos.c **** 	for (int pin = 0; pin < MULTIPLEXER_SENSORS[mux]; pin++) // Starting from 1 because of the circuit
 747              		.loc 1 230 24 is_stmt 1 discriminator 1 view .LVU156
 230:Core/Src/freertos.c **** 	for (int pin = 0; pin < MULTIPLEXER_SENSORS[mux]; pin++) // Starting from 1 because of the circuit
 748              		.loc 1 230 45 is_stmt 0 discriminator 1 view .LVU157
 749 0024 164B     		ldr	r3, .L52+4
 750 0026 53F82430 		ldr	r3, [r3, r4, lsl #2]
 230:Core/Src/freertos.c **** 	for (int pin = 0; pin < MULTIPLEXER_SENSORS[mux]; pin++) // Starting from 1 because of the circuit
 751              		.loc 1 230 24 discriminator 1 view .LVU158
 752 002a AB42     		cmp	r3, r5
 753 002c 25DD     		ble	.L51
 232:Core/Src/freertos.c **** 	  switch(mux)
 754              		.loc 1 232 7 is_stmt 1 view .LVU159
 755 002e 6E1C     		adds	r6, r5, #1
 756 0030 3146     		mov	r1, r6
 757 0032 2046     		mov	r0, r4
 758 0034 FFF7FEFF 		bl	switchMuxPin
 759              	.LVL97:
 233:Core/Src/freertos.c **** 	  {  // Read ADC pin corresponding to the given multiplexer
 760              		.loc 1 233 4 view .LVU160
 761 0038 012C     		cmp	r4, #1
 762 003a E5D0     		beq	.L46
 763 003c 022C     		cmp	r4, #2
 764 003e 0ED0     		beq	.L47
 765 0040 002C     		cmp	r4, #0
 766 0042 EED1     		bne	.L48
 236:Core/Src/freertos.c **** 	  case MUX2:
 767              		.loc 1 236 5 view .LVU161
 236:Core/Src/freertos.c **** 	  case MUX2:
 768              		.loc 1 236 26 is_stmt 0 view .LVU162
 769 0044 FFF7FEFF 		bl	readM1Analog
 770              	.LVL98:
 236:Core/Src/freertos.c **** 	  case MUX2:
 771              		.loc 1 236 13 view .LVU163
ARM GAS  /tmp/ccwprL5w.s 			page 20


 772 0048 0C4B     		ldr	r3, .L52
 773 004a 1B69     		ldr	r3, [r3, #16]
 236:Core/Src/freertos.c **** 	  case MUX2:
 774              		.loc 1 236 18 view .LVU164
 775 004c 03EBC505 		add	r5, r3, r5, lsl #3
 776              	.LVL99:
 236:Core/Src/freertos.c **** 	  case MUX2:
 777              		.loc 1 236 26 view .LVU165
 778 0050 41F25C21 		movw	r1, #4700
 779 0054 FFF7FEFF 		bl	calculateForce
 780              	.LVL100:
 236:Core/Src/freertos.c **** 	  case MUX2:
 781              		.loc 1 236 24 view .LVU166
 782 0058 85ED000B 		vstr.64	d0, [r5]
 236:Core/Src/freertos.c **** 	  case MUX2:
 783              		.loc 1 236 71 is_stmt 1 view .LVU167
 784 005c E1E7     		b	.L48
 785              	.LVL101:
 786              	.L47:
 239:Core/Src/freertos.c **** 	  case MUX3:
 240:Core/Src/freertos.c **** 		  msg.data.data[pin + MUX3 * MULTIPLEXER_SENSORS[MUX2]] = calculateForce(readM3Analog(), RESISTOR
 787              		.loc 1 240 5 view .LVU168
 788              		.loc 1 240 61 is_stmt 0 view .LVU169
 789 005e FFF7FEFF 		bl	readM3Analog
 790              	.LVL102:
 791              		.loc 1 240 13 view .LVU170
 792 0062 064B     		ldr	r3, .L52
 793 0064 1B69     		ldr	r3, [r3, #16]
 794              		.loc 1 240 23 view .LVU171
 795 0066 0C35     		adds	r5, r5, #12
 796              	.LVL103:
 797              		.loc 1 240 18 view .LVU172
 798 0068 03EBC505 		add	r5, r3, r5, lsl #3
 799              	.LVL104:
 800              		.loc 1 240 61 view .LVU173
 801 006c 40F69801 		movw	r1, #2200
 802 0070 FFF7FEFF 		bl	calculateForce
 803              	.LVL105:
 804              		.loc 1 240 59 view .LVU174
 805 0074 85ED000B 		vstr.64	d0, [r5]
 806              		.loc 1 240 106 is_stmt 1 view .LVU175
 807 0078 D3E7     		b	.L48
 808              	.LVL106:
 809              	.L51:
 810              		.loc 1 240 106 is_stmt 0 view .LVU176
 811              	.LBE3:
 241:Core/Src/freertos.c **** 	  }
 242:Core/Src/freertos.c **** 	}
 243:Core/Src/freertos.c **** }
 812              		.loc 1 243 1 view .LVU177
 813 007a 70BD     		pop	{r4, r5, r6, pc}
 814              	.LVL107:
 815              	.L53:
 816              		.loc 1 243 1 view .LVU178
 817              		.align	2
 818              	.L52:
 819 007c 00000000 		.word	.LANCHOR5
ARM GAS  /tmp/ccwprL5w.s 			page 21


 820 0080 00000000 		.word	.LANCHOR6
 821              		.cfi_endproc
 822              	.LFE248:
 824              		.section	.text.readGloveSignals,"ax",%progbits
 825              		.align	1
 826              		.global	readGloveSignals
 827              		.syntax unified
 828              		.thumb
 829              		.thumb_func
 831              	readGloveSignals:
 832              	.LFB249:
 244:Core/Src/freertos.c **** 
 245:Core/Src/freertos.c **** void readGloveSignals()
 246:Core/Src/freertos.c **** {
 833              		.loc 1 246 1 is_stmt 1 view -0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837 0000 10B5     		push	{r4, lr}
 838              	.LCFI6:
 839              		.cfi_def_cfa_offset 8
 840              		.cfi_offset 4, -8
 841              		.cfi_offset 14, -4
 247:Core/Src/freertos.c **** 	for (int selected_mux = MUX1; selected_mux < NUMBER_OF_MULTIPLEXERS; selected_mux++)
 842              		.loc 1 247 2 view .LVU180
 843              	.LBB4:
 844              		.loc 1 247 7 view .LVU181
 845              	.LVL108:
 846              		.loc 1 247 11 is_stmt 0 view .LVU182
 847 0002 0024     		movs	r4, #0
 848              		.loc 1 247 2 view .LVU183
 849 0004 03E0     		b	.L55
 850              	.LVL109:
 851              	.L56:
 248:Core/Src/freertos.c **** 	{
 249:Core/Src/freertos.c **** 		readMultiplexerInput(selected_mux);
 852              		.loc 1 249 3 is_stmt 1 discriminator 3 view .LVU184
 853 0006 2046     		mov	r0, r4
 854 0008 FFF7FEFF 		bl	readMultiplexerInput
 855              	.LVL110:
 247:Core/Src/freertos.c **** 	for (int selected_mux = MUX1; selected_mux < NUMBER_OF_MULTIPLEXERS; selected_mux++)
 856              		.loc 1 247 83 discriminator 3 view .LVU185
 857 000c 0134     		adds	r4, r4, #1
 858              	.LVL111:
 859              	.L55:
 247:Core/Src/freertos.c **** 	for (int selected_mux = MUX1; selected_mux < NUMBER_OF_MULTIPLEXERS; selected_mux++)
 860              		.loc 1 247 45 discriminator 1 view .LVU186
 861 000e 022C     		cmp	r4, #2
 862 0010 F9DD     		ble	.L56
 863              	.LBE4:
 250:Core/Src/freertos.c **** 	}
 251:Core/Src/freertos.c **** }
 864              		.loc 1 251 1 is_stmt 0 view .LVU187
 865 0012 10BD     		pop	{r4, pc}
 866              		.loc 1 251 1 view .LVU188
 867              		.cfi_endproc
 868              	.LFE249:
ARM GAS  /tmp/ccwprL5w.s 			page 22


 870              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 871              		.align	2
 872              	.LC0:
 873 0000 4572726F 		.ascii	"Error on default allocators (line %d)\012\000"
 873      72206F6E 
 873      20646566 
 873      61756C74 
 873      20616C6C 
 874 0027 00       		.align	2
 875              	.LC1:
 876 0028 00       		.ascii	"\000"
 877 0029 000000   		.align	2
 878              	.LC2:
 879 002c 6D696372 		.ascii	"microros_node\000"
 879      6F726F73 
 879      5F6E6F64 
 879      6500
 880 003a 0000     		.align	2
 881              	.LC3:
 882 003c 676C6F76 		.ascii	"glove_data\000"
 882      655F6461 
 882      746100
 883 0047 00       		.align	2
 884              	.LC4:
 885 0048 4572726F 		.ascii	"Error publishing (line %d)\012\000"
 885      72207075 
 885      626C6973 
 885      68696E67 
 885      20286C69 
 886              		.section	.text.StartDefaultTask,"ax",%progbits
 887              		.align	1
 888              		.global	StartDefaultTask
 889              		.syntax unified
 890              		.thumb
 891              		.thumb_func
 893              	StartDefaultTask:
 894              	.LVL112:
 895              	.LFB251:
 252:Core/Src/freertos.c **** 
 253:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 254:Core/Src/freertos.c **** 
 255:Core/Src/freertos.c **** void StartDefaultTask(void *argument);
 256:Core/Src/freertos.c **** 
 257:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
 258:Core/Src/freertos.c **** 
 259:Core/Src/freertos.c **** /**
 260:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
 261:Core/Src/freertos.c ****   * @param  None
 262:Core/Src/freertos.c ****   * @retval None
 263:Core/Src/freertos.c ****   */
 264:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
 265:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 266:Core/Src/freertos.c **** 
 267:Core/Src/freertos.c ****   /* USER CODE END Init */
 268:Core/Src/freertos.c **** 
 269:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 270:Core/Src/freertos.c ****   /* add mutexes, ... */
ARM GAS  /tmp/ccwprL5w.s 			page 23


 271:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 272:Core/Src/freertos.c **** 
 273:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 274:Core/Src/freertos.c ****   /* add semaphores, ... */
 275:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 276:Core/Src/freertos.c **** 
 277:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 278:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 279:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 280:Core/Src/freertos.c **** 
 281:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 282:Core/Src/freertos.c ****   /* add queues, ... */
 283:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 284:Core/Src/freertos.c **** 
 285:Core/Src/freertos.c ****   /* Create the thread(s) */
 286:Core/Src/freertos.c ****   /* creation of defaultTask */
 287:Core/Src/freertos.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 288:Core/Src/freertos.c **** 
 289:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 290:Core/Src/freertos.c ****   /* add threads, ... */
 291:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 292:Core/Src/freertos.c **** 
 293:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 294:Core/Src/freertos.c ****   /* add events, ... */
 295:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 296:Core/Src/freertos.c **** 
 297:Core/Src/freertos.c **** }
 298:Core/Src/freertos.c **** 
 299:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 300:Core/Src/freertos.c **** /**
 301:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 302:Core/Src/freertos.c ****   * @param  argument: Not used
 303:Core/Src/freertos.c ****   * @retval None
 304:Core/Src/freertos.c ****   */
 305:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 306:Core/Src/freertos.c **** void StartDefaultTask(void *argument)
 307:Core/Src/freertos.c **** {
 896              		.loc 1 307 1 is_stmt 1 view -0
 897              		.cfi_startproc
 898              		@ Volatile: function does not return.
 899              		@ args = 0, pretend = 0, frame = 664
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              		.loc 1 307 1 is_stmt 0 view .LVU190
 902 0000 00B5     		push	{lr}
 903              	.LCFI7:
 904              		.cfi_def_cfa_offset 4
 905              		.cfi_offset 14, -4
 906 0002 ADF5297D 		sub	sp, sp, #676
 907              	.LCFI8:
 908              		.cfi_def_cfa_offset 680
 308:Core/Src/freertos.c ****   /* USER CODE BEGIN 5 */
 309:Core/Src/freertos.c **** 
 310:Core/Src/freertos.c ****   // micro-ROS configuration
 311:Core/Src/freertos.c **** 
 312:Core/Src/freertos.c ****   rmw_uros_set_custom_transport(
 909              		.loc 1 312 3 is_stmt 1 view .LVU191
 910 0006 364B     		ldr	r3, .L65
ARM GAS  /tmp/ccwprL5w.s 			page 24


 911 0008 0193     		str	r3, [sp, #4]
 912 000a 364B     		ldr	r3, .L65+4
 913 000c 0093     		str	r3, [sp]
 914 000e 364B     		ldr	r3, .L65+8
 915 0010 364A     		ldr	r2, .L65+12
 916 0012 3749     		ldr	r1, .L65+16
 917 0014 0120     		movs	r0, #1
 918              	.LVL113:
 919              		.loc 1 312 3 is_stmt 0 view .LVU192
 920 0016 FFF7FEFF 		bl	rmw_uros_set_custom_transport
 921              	.LVL114:
 313:Core/Src/freertos.c ****     true,
 314:Core/Src/freertos.c ****     (void *) &huart2,
 315:Core/Src/freertos.c ****     cubemx_transport_open,
 316:Core/Src/freertos.c ****     cubemx_transport_close,
 317:Core/Src/freertos.c ****     cubemx_transport_write,
 318:Core/Src/freertos.c ****     cubemx_transport_read);
 319:Core/Src/freertos.c **** 
 320:Core/Src/freertos.c ****   rcl_allocator_t freeRTOS_allocator = rcutils_get_zero_initialized_allocator();
 922              		.loc 1 320 3 is_stmt 1 view .LVU193
 923              		.loc 1 320 40 is_stmt 0 view .LVU194
 924 001a A3A8     		add	r0, sp, #652
 925 001c FFF7FEFF 		bl	rcutils_get_zero_initialized_allocator
 926              	.LVL115:
 321:Core/Src/freertos.c ****   freeRTOS_allocator.allocate = microros_allocate;
 927              		.loc 1 321 3 is_stmt 1 view .LVU195
 928              		.loc 1 321 31 is_stmt 0 view .LVU196
 929 0020 344B     		ldr	r3, .L65+20
 930 0022 A393     		str	r3, [sp, #652]
 322:Core/Src/freertos.c ****   freeRTOS_allocator.deallocate = microros_deallocate;
 931              		.loc 1 322 3 is_stmt 1 view .LVU197
 932              		.loc 1 322 33 is_stmt 0 view .LVU198
 933 0024 344B     		ldr	r3, .L65+24
 934 0026 A493     		str	r3, [sp, #656]
 323:Core/Src/freertos.c ****   freeRTOS_allocator.reallocate = microros_reallocate;
 935              		.loc 1 323 3 is_stmt 1 view .LVU199
 936              		.loc 1 323 33 is_stmt 0 view .LVU200
 937 0028 344B     		ldr	r3, .L65+28
 938 002a A593     		str	r3, [sp, #660]
 324:Core/Src/freertos.c ****   freeRTOS_allocator.zero_allocate =  microros_zero_allocate;
 939              		.loc 1 324 3 is_stmt 1 view .LVU201
 940              		.loc 1 324 36 is_stmt 0 view .LVU202
 941 002c 344B     		ldr	r3, .L65+32
 942 002e A693     		str	r3, [sp, #664]
 325:Core/Src/freertos.c **** 
 326:Core/Src/freertos.c ****   if (!rcutils_set_default_allocator(&freeRTOS_allocator)) {
 943              		.loc 1 326 3 is_stmt 1 view .LVU203
 944              		.loc 1 326 8 is_stmt 0 view .LVU204
 945 0030 A3A8     		add	r0, sp, #652
 946 0032 FFF7FEFF 		bl	rcutils_set_default_allocator
 947              	.LVL116:
 948              		.loc 1 326 6 view .LVU205
 949 0036 0028     		cmp	r0, #0
 950 0038 39D0     		beq	.L63
 951              	.L59:
 327:Core/Src/freertos.c ****       printf("Error on default allocators (line %d)\n", __LINE__);
 328:Core/Src/freertos.c ****   }
ARM GAS  /tmp/ccwprL5w.s 			page 25


 329:Core/Src/freertos.c **** 
 330:Core/Src/freertos.c ****   // create init_options
 331:Core/Src/freertos.c ****   rcl_allocator_t allocator;
 952              		.loc 1 331 3 is_stmt 1 view .LVU206
 332:Core/Src/freertos.c ****   allocator = rcl_get_default_allocator();
 953              		.loc 1 332 3 view .LVU207
 954              		.loc 1 332 15 is_stmt 0 view .LVU208
 955 003a 02A8     		add	r0, sp, #8
 956 003c FFF7FEFF 		bl	rcutils_get_default_allocator
 957              	.LVL117:
 958 0040 0DF51E7E 		add	lr, sp, #632
 959 0044 0DF1080C 		add	ip, sp, #8
 960 0048 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 961 004c AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 962 0050 DCF80030 		ldr	r3, [ip]
 963 0054 CEF80030 		str	r3, [lr]
 333:Core/Src/freertos.c ****   rclc_support_t support;
 964              		.loc 1 333 3 is_stmt 1 view .LVU209
 334:Core/Src/freertos.c ****   rclc_support_init(&support, 0, NULL, &allocator);
 965              		.loc 1 334 3 view .LVU210
 966 0058 9EAB     		add	r3, sp, #632
 967 005a 0022     		movs	r2, #0
 968 005c 1146     		mov	r1, r2
 969 005e 91A8     		add	r0, sp, #580
 970 0060 FFF7FEFF 		bl	rclc_support_init
 971              	.LVL118:
 335:Core/Src/freertos.c **** 
 336:Core/Src/freertos.c ****   // create node
 337:Core/Src/freertos.c ****   rcl_node_t node;
 972              		.loc 1 337 3 view .LVU211
 338:Core/Src/freertos.c ****   rclc_node_init_default(&node, "microros_node", "", &support);
 973              		.loc 1 338 3 view .LVU212
 974 0064 91AB     		add	r3, sp, #580
 975 0066 274A     		ldr	r2, .L65+36
 976 0068 2749     		ldr	r1, .L65+40
 977 006a 8FA8     		add	r0, sp, #572
 978 006c FFF7FEFF 		bl	rclc_node_init_default
 979              	.LVL119:
 339:Core/Src/freertos.c **** 
 340:Core/Src/freertos.c ****   // create publisher
 341:Core/Src/freertos.c ****   rcl_publisher_t publisher;
 980              		.loc 1 341 3 view .LVU213
 342:Core/Src/freertos.c ****   rclc_publisher_init_default(
 981              		.loc 1 342 3 view .LVU214
 982 0070 FFF7FEFF 		bl	rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Float64MultiArray
 983              	.LVL120:
 984 0074 0246     		mov	r2, r0
 985 0076 254B     		ldr	r3, .L65+44
 986 0078 8FA9     		add	r1, sp, #572
 987 007a 8EA8     		add	r0, sp, #568
 988 007c FFF7FEFF 		bl	rclc_publisher_init_default
 989              	.LVL121:
 343:Core/Src/freertos.c ****     &publisher,
 344:Core/Src/freertos.c ****     &node,
 345:Core/Src/freertos.c ****     ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Float64MultiArray),
 346:Core/Src/freertos.c ****     "glove_data");
 347:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccwprL5w.s 			page 26


 348:Core/Src/freertos.c **** //  create empty buffer for sensor values
 349:Core/Src/freertos.c ****   double buffer[NUMBER_OF_SENSORS] = {};
 990              		.loc 1 349 3 view .LVU215
 991              		.loc 1 349 10 is_stmt 0 view .LVU216
 992 0080 68AD     		add	r5, sp, #416
 993 0082 9822     		movs	r2, #152
 994 0084 0021     		movs	r1, #0
 995 0086 2846     		mov	r0, r5
 996 0088 FFF7FEFF 		bl	memset
 997              	.LVL122:
 350:Core/Src/freertos.c ****   msg.data.data = buffer;
 998              		.loc 1 350 3 is_stmt 1 view .LVU217
 999              		.loc 1 350 17 is_stmt 0 view .LVU218
 1000 008c 204C     		ldr	r4, .L65+48
 1001 008e 2561     		str	r5, [r4, #16]
 351:Core/Src/freertos.c ****   msg.data.size = NUMBER_OF_SENSORS;
 1002              		.loc 1 351 3 is_stmt 1 view .LVU219
 1003              		.loc 1 351 17 is_stmt 0 view .LVU220
 1004 0090 1325     		movs	r5, #19
 1005 0092 6561     		str	r5, [r4, #20]
 352:Core/Src/freertos.c ****   msg.data.capacity = NUMBER_OF_SENSORS;
 1006              		.loc 1 352 3 is_stmt 1 view .LVU221
 1007              		.loc 1 352 21 is_stmt 0 view .LVU222
 1008 0094 A561     		str	r5, [r4, #24]
 353:Core/Src/freertos.c **** 
 354:Core/Src/freertos.c ****   std_msgs__msg__MultiArrayDimension dim[NUMBER_OF_SENSORS] = {};
 1009              		.loc 1 354 3 is_stmt 1 view .LVU223
 1010              		.loc 1 354 38 is_stmt 0 view .LVU224
 1011 0096 09AE     		add	r6, sp, #36
 1012 0098 4FF4BE72 		mov	r2, #380
 1013 009c 0021     		movs	r1, #0
 1014 009e 3046     		mov	r0, r6
 1015 00a0 FFF7FEFF 		bl	memset
 1016              	.LVL123:
 355:Core/Src/freertos.c ****   msg.layout.dim.data = dim;
 1017              		.loc 1 355 3 is_stmt 1 view .LVU225
 1018              		.loc 1 355 23 is_stmt 0 view .LVU226
 1019 00a4 2660     		str	r6, [r4]
 356:Core/Src/freertos.c ****   msg.layout.dim.size = 0;
 1020              		.loc 1 356 3 is_stmt 1 view .LVU227
 1021              		.loc 1 356 23 is_stmt 0 view .LVU228
 1022 00a6 0023     		movs	r3, #0
 1023 00a8 6360     		str	r3, [r4, #4]
 357:Core/Src/freertos.c ****   msg.layout.dim.capacity = NUMBER_OF_SENSORS;
 1024              		.loc 1 357 3 is_stmt 1 view .LVU229
 1025              		.loc 1 357 27 is_stmt 0 view .LVU230
 1026 00aa A560     		str	r5, [r4, #8]
 1027 00ac 0FE0     		b	.L61
 1028              	.L63:
 327:Core/Src/freertos.c ****   }
 1029              		.loc 1 327 7 is_stmt 1 view .LVU231
 1030 00ae 40F24711 		movw	r1, #327
 1031 00b2 1848     		ldr	r0, .L65+52
 1032 00b4 FFF7FEFF 		bl	printf
 1033              	.LVL124:
 1034 00b8 BFE7     		b	.L59
 1035              	.L64:
ARM GAS  /tmp/ccwprL5w.s 			page 27


 358:Core/Src/freertos.c **** 
 359:Core/Src/freertos.c ****   for(;;)
 360:Core/Src/freertos.c ****   {
 361:Core/Src/freertos.c ****     if (rcl_publish(&publisher, &msg, NULL) != RCL_RET_OK)
 362:Core/Src/freertos.c ****     {
 363:Core/Src/freertos.c ****       printf("Error publishing (line %d)\n", __LINE__);
 1036              		.loc 1 363 7 view .LVU232
 1037 00ba 40F26B11 		movw	r1, #363
 1038 00be 1648     		ldr	r0, .L65+56
 1039 00c0 FFF7FEFF 		bl	printf
 1040              	.LVL125:
 1041              	.L60:
 364:Core/Src/freertos.c ****     }
 365:Core/Src/freertos.c **** 
 366:Core/Src/freertos.c ****     readGloveSignals();
 1042              		.loc 1 366 5 view .LVU233
 1043 00c4 FFF7FEFF 		bl	readGloveSignals
 1044              	.LVL126:
 367:Core/Src/freertos.c **** 
 368:Core/Src/freertos.c **** //	for (int pin = 0; pin < MULTIPLEXER_SENSORS[MUX1]; pin++) // Starting from 1 because of the circ
 369:Core/Src/freertos.c **** //	{
 370:Core/Src/freertos.c **** //      switchMuxPin(MUX1, pin+1);
 371:Core/Src/freertos.c **** //	  msg.data.data[pin] = calculateForce(readM1Analog(), RESISTOR_47);
 372:Core/Src/freertos.c **** //	}
 373:Core/Src/freertos.c **** //
 374:Core/Src/freertos.c **** //	for (int pin = 0; pin < MULTIPLEXER_SENSORS[MUX2]; pin++) // Starting from 1 because of the circ
 375:Core/Src/freertos.c **** //	{
 376:Core/Src/freertos.c **** //      switchMuxPin(MUX2, pin+1);
 377:Core/Src/freertos.c **** //	  msg.data.data[pin + 1 * MULTIPLEXER_SENSORS[MUX1]] = calculateForce(readM2Analog(), RESISTOR_4
 378:Core/Src/freertos.c **** //	}
 379:Core/Src/freertos.c **** //
 380:Core/Src/freertos.c **** //	for (int pin = 0; pin < MULTIPLEXER_SENSORS[MUX3]; pin++) // Starting from 1 because of the circ
 381:Core/Src/freertos.c **** //	{
 382:Core/Src/freertos.c **** //      switchMuxPin(MUX3, pin+1);
 383:Core/Src/freertos.c **** //	  msg.data.data[pin + 2 * MULTIPLEXER_SENSORS[MUX2]] = calculateForce(readM3Analog(), RESISTOR_2
 384:Core/Src/freertos.c **** //	}
 385:Core/Src/freertos.c **** 
 386:Core/Src/freertos.c **** 
 387:Core/Src/freertos.c ****     osDelay(100);
 1045              		.loc 1 387 5 view .LVU234
 1046 00c8 6420     		movs	r0, #100
 1047 00ca FFF7FEFF 		bl	osDelay
 1048              	.LVL127:
 359:Core/Src/freertos.c ****   {
 1049              		.loc 1 359 3 view .LVU235
 1050              	.L61:
 359:Core/Src/freertos.c ****   {
 1051              		.loc 1 359 3 view .LVU236
 361:Core/Src/freertos.c ****     {
 1052              		.loc 1 361 5 view .LVU237
 361:Core/Src/freertos.c ****     {
 1053              		.loc 1 361 9 is_stmt 0 view .LVU238
 1054 00ce 0022     		movs	r2, #0
 1055 00d0 0F49     		ldr	r1, .L65+48
 1056 00d2 8EA8     		add	r0, sp, #568
 1057 00d4 FFF7FEFF 		bl	rcl_publish
 1058              	.LVL128:
ARM GAS  /tmp/ccwprL5w.s 			page 28


 361:Core/Src/freertos.c ****     {
 1059              		.loc 1 361 8 view .LVU239
 1060 00d8 0028     		cmp	r0, #0
 1061 00da EED1     		bne	.L64
 1062 00dc F2E7     		b	.L60
 1063              	.L66:
 1064 00de 00BF     		.align	2
 1065              	.L65:
 1066 00e0 00000000 		.word	cubemx_transport_read
 1067 00e4 00000000 		.word	cubemx_transport_write
 1068 00e8 00000000 		.word	cubemx_transport_close
 1069 00ec 00000000 		.word	cubemx_transport_open
 1070 00f0 00000000 		.word	huart2
 1071 00f4 00000000 		.word	microros_allocate
 1072 00f8 00000000 		.word	microros_deallocate
 1073 00fc 00000000 		.word	microros_reallocate
 1074 0100 00000000 		.word	microros_zero_allocate
 1075 0104 28000000 		.word	.LC1
 1076 0108 2C000000 		.word	.LC2
 1077 010c 3C000000 		.word	.LC3
 1078 0110 00000000 		.word	.LANCHOR5
 1079 0114 00000000 		.word	.LC0
 1080 0118 48000000 		.word	.LC4
 1081              		.cfi_endproc
 1082              	.LFE251:
 1084              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 1085              		.align	1
 1086              		.global	MX_FREERTOS_Init
 1087              		.syntax unified
 1088              		.thumb
 1089              		.thumb_func
 1091              	MX_FREERTOS_Init:
 1092              	.LFB250:
 264:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 1093              		.loc 1 264 29 is_stmt 1 view -0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 0
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097 0000 08B5     		push	{r3, lr}
 1098              	.LCFI9:
 1099              		.cfi_def_cfa_offset 8
 1100              		.cfi_offset 3, -8
 1101              		.cfi_offset 14, -4
 287:Core/Src/freertos.c **** 
 1102              		.loc 1 287 3 view .LVU241
 287:Core/Src/freertos.c **** 
 1103              		.loc 1 287 23 is_stmt 0 view .LVU242
 1104 0002 044A     		ldr	r2, .L69
 1105 0004 0021     		movs	r1, #0
 1106 0006 0448     		ldr	r0, .L69+4
 1107 0008 FFF7FEFF 		bl	osThreadNew
 1108              	.LVL129:
 287:Core/Src/freertos.c **** 
 1109              		.loc 1 287 21 view .LVU243
 1110 000c 034B     		ldr	r3, .L69+8
 1111 000e 1860     		str	r0, [r3]
 297:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccwprL5w.s 			page 29


 1112              		.loc 1 297 1 view .LVU244
 1113 0010 08BD     		pop	{r3, pc}
 1114              	.L70:
 1115 0012 00BF     		.align	2
 1116              	.L69:
 1117 0014 00000000 		.word	.LANCHOR7
 1118 0018 00000000 		.word	StartDefaultTask
 1119 001c 00000000 		.word	.LANCHOR8
 1120              		.cfi_endproc
 1121              	.LFE250:
 1123              		.global	defaultTask_attributes
 1124              		.section	.rodata.str1.4,"aMS",%progbits,1
 1125              		.align	2
 1126              	.LC5:
 1127 0000 64656661 		.ascii	"defaultTask\000"
 1127      756C7454 
 1127      61736B00 
 1128              		.global	defaultTaskHandle
 1129              		.global	conductance
 1130              		.global	sensorResistance
 1131              		.global	current
 1132              		.global	voltageAOC
 1133              		.global	msg
 1134              		.global	B_SMALL_RES
 1135              		.global	A_SMALL_RES
 1136              		.global	B_BIG_RES
 1137              		.global	A_BIG_RES
 1138              		.global	VOLT_IN
 1139              		.global	RESISTOR_22
 1140              		.global	RESISTOR_47
 1141              		.global	MAX_RESOLUTION_VALUE
 1142              		.global	MULTIPLEXER_SENSORS
 1143              		.global	MUX_SELECT_PINS
 1144              		.section	.bss.conductance,"aw",%nobits
 1145              		.align	3
 1146              		.set	.LANCHOR4,. + 0
 1149              	conductance:
 1150 0000 00000000 		.space	8
 1150      00000000 
 1151              		.section	.bss.current,"aw",%nobits
 1152              		.align	3
 1153              		.set	.LANCHOR2,. + 0
 1156              	current:
 1157 0000 00000000 		.space	8
 1157      00000000 
 1158              		.section	.bss.defaultTaskHandle,"aw",%nobits
 1159              		.align	2
 1160              		.set	.LANCHOR8,. + 0
 1163              	defaultTaskHandle:
 1164 0000 00000000 		.space	4
 1165              		.section	.bss.msg,"aw",%nobits
 1166              		.align	2
 1167              		.set	.LANCHOR5,. + 0
 1170              	msg:
 1171 0000 00000000 		.space	28
 1171      00000000 
 1171      00000000 
ARM GAS  /tmp/ccwprL5w.s 			page 30


 1171      00000000 
 1171      00000000 
 1172              		.section	.bss.sensorResistance,"aw",%nobits
 1173              		.align	3
 1174              		.set	.LANCHOR3,. + 0
 1177              	sensorResistance:
 1178 0000 00000000 		.space	8
 1178      00000000 
 1179              		.section	.bss.voltageAOC,"aw",%nobits
 1180              		.align	3
 1181              		.set	.LANCHOR1,. + 0
 1184              	voltageAOC:
 1185 0000 00000000 		.space	8
 1185      00000000 
 1186              		.section	.rodata.A_BIG_RES,"a"
 1187              		.align	3
 1190              	A_BIG_RES:
 1191 0000 5876870F 		.word	260535896
 1192 0004 EE7C0440 		.word	1074035950
 1193              		.section	.rodata.A_SMALL_RES,"a"
 1194              		.align	3
 1197              	A_SMALL_RES:
 1198 0000 FFC0E5DA 		.word	-622477057
 1199 0004 D368C13F 		.word	1069639891
 1200              		.section	.rodata.B_BIG_RES,"a"
 1201              		.align	3
 1204              	B_BIG_RES:
 1205 0000 0258A456 		.word	1453611010
 1206 0004 555DF03F 		.word	1072717141
 1207              		.section	.rodata.B_SMALL_RES,"a"
 1208              		.align	3
 1211              	B_SMALL_RES:
 1212 0000 B3C727F8 		.word	-131610701
 1213 0004 F7E4FB3F 		.word	1073472759
 1214              		.section	.rodata.MAX_RESOLUTION_VALUE,"a"
 1215              		.align	2
 1218              	MAX_RESOLUTION_VALUE:
 1219 0000 FF0F0000 		.word	4095
 1220              		.section	.rodata.MULTIPLEXER_SENSORS,"a"
 1221              		.align	2
 1222              		.set	.LANCHOR6,. + 0
 1225              	MULTIPLEXER_SENSORS:
 1226 0000 06000000 		.word	6
 1227 0004 06000000 		.word	6
 1228 0008 07000000 		.word	7
 1229              		.section	.rodata.MUX_SELECT_PINS,"a"
 1230              		.align	2
 1231              		.set	.LANCHOR0,. + 0
 1234              	MUX_SELECT_PINS:
 1235 0000 80000000 		.word	128
 1236 0004 00010000 		.word	256
 1237 0008 00020000 		.word	512
 1238 000c 00040000 		.word	1024
 1239 0010 00080000 		.word	2048
 1240 0014 00100000 		.word	4096
 1241 0018 00200000 		.word	8192
 1242 001c 00400000 		.word	16384
ARM GAS  /tmp/ccwprL5w.s 			page 31


 1243 0020 00800000 		.word	32768
 1244              		.section	.rodata.RESISTOR_22,"a"
 1245              		.align	2
 1248              	RESISTOR_22:
 1249 0000 98080000 		.word	2200
 1250              		.section	.rodata.RESISTOR_47,"a"
 1251              		.align	2
 1254              	RESISTOR_47:
 1255 0000 5C120000 		.word	4700
 1256              		.section	.rodata.VOLT_IN,"a"
 1257              		.align	3
 1260              	VOLT_IN:
 1261 0000 9A999999 		.word	-1717986918
 1262 0004 99990740 		.word	1074239897
 1263              		.section	.rodata.defaultTask_attributes,"a"
 1264              		.align	2
 1265              		.set	.LANCHOR7,. + 0
 1268              	defaultTask_attributes:
 1269 0000 00000000 		.word	.LC5
 1270 0004 00000000 		.space	16
 1270      00000000 
 1270      00000000 
 1270      00000000 
 1271 0014 B0360000 		.word	14000
 1272 0018 18000000 		.word	24
 1273 001c 00000000 		.space	8
 1273      00000000 
 1274              		.text
 1275              	.Letext0:
 1276              		.file 2 "/opt/st/stm32cubeide_1.13.2/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 1277              		.file 3 "/opt/st/stm32cubeide_1.13.2/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 1278              		.file 4 "/opt/st/stm32cubeide_1.13.2/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 1279              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1280              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1281              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1282              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1283              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1284              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1285              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1286              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1287              		.file 13 "Core/Inc/adc.h"
 1288              		.file 14 "Core/Inc/usart.h"
 1289              		.file 15 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcutils
 1290              		.file 16 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/all
 1291              		.file 17 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/ret
 1292              		.file 18 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcutils
 1293              		.file 19 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/tim
 1294              		.file 20 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/typ
 1295              		.file 21 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/typ
 1296              		.file 22 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/con
 1297              		.file 23 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/nod
 1298              		.file 24 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rosidl_
 1299              		.file 25 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/tim
 1300              		.file 26 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/pub
 1301              		.file 27 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/qos
 1302              		.file 28 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/ty
 1303              		.file 29 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl_act
ARM GAS  /tmp/ccwprL5w.s 			page 32


 1304              		.file 30 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/uxr/cli
 1305              		.file 31 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/uxr/cli
 1306              		.file 32 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/uxr/cli
 1307              		.file 33 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rosidl_
 1308              		.file 34 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rosidl_
 1309              		.file 35 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/std_msg
 1310              		.file 36 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/std_msg
 1311              		.file 37 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/std_msg
 1312              		.file 38 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/pu
 1313              		.file 39 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/no
 1314              		.file 40 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/in
 1315              		.file 41 "/opt/st/stm32cubeide_1.13.2/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for
 1316              		.file 42 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/std_msg
 1317              		.file 43 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw_mic
 1318              		.file 44 "/opt/st/stm32cubeide_1.13.2/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for
 1319              		.file 45 "<built-in>"
ARM GAS  /tmp/ccwprL5w.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccwprL5w.s:20     .text.switchMuxPin:0000000000000000 $t
     /tmp/ccwprL5w.s:26     .text.switchMuxPin:0000000000000000 switchMuxPin
     /tmp/ccwprL5w.s:49     .text.switchMuxPin:000000000000000c $d
     /tmp/ccwprL5w.s:57     .text.switchMuxPin:0000000000000014 $t
     /tmp/ccwprL5w.s:319    .text.switchMuxPin:00000000000001a8 $d
     /tmp/ccwprL5w.s:325    .text.readM1Analog:0000000000000000 $t
     /tmp/ccwprL5w.s:331    .text.readM1Analog:0000000000000000 readM1Analog
     /tmp/ccwprL5w.s:384    .text.readM1Analog:000000000000002c $d
     /tmp/ccwprL5w.s:389    .text.readM2Analog:0000000000000000 $t
     /tmp/ccwprL5w.s:395    .text.readM2Analog:0000000000000000 readM2Analog
     /tmp/ccwprL5w.s:448    .text.readM2Analog:000000000000002c $d
     /tmp/ccwprL5w.s:453    .text.readM3Analog:0000000000000000 $t
     /tmp/ccwprL5w.s:459    .text.readM3Analog:0000000000000000 readM3Analog
     /tmp/ccwprL5w.s:512    .text.readM3Analog:000000000000002c $d
     /tmp/ccwprL5w.s:522    .text.calculateForce:0000000000000000 $t
     /tmp/ccwprL5w.s:528    .text.calculateForce:0000000000000000 calculateForce
     /tmp/ccwprL5w.s:662    .text.calculateForce:00000000000000d8 $d
     /tmp/ccwprL5w.s:687    .text.readMultiplexerInput:0000000000000000 $t
     /tmp/ccwprL5w.s:693    .text.readMultiplexerInput:0000000000000000 readMultiplexerInput
     /tmp/ccwprL5w.s:819    .text.readMultiplexerInput:000000000000007c $d
     /tmp/ccwprL5w.s:825    .text.readGloveSignals:0000000000000000 $t
     /tmp/ccwprL5w.s:831    .text.readGloveSignals:0000000000000000 readGloveSignals
     /tmp/ccwprL5w.s:871    .rodata.StartDefaultTask.str1.4:0000000000000000 $d
     /tmp/ccwprL5w.s:887    .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccwprL5w.s:893    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccwprL5w.s:1066   .text.StartDefaultTask:00000000000000e0 $d
     /tmp/ccwprL5w.s:1085   .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccwprL5w.s:1091   .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccwprL5w.s:1117   .text.MX_FREERTOS_Init:0000000000000014 $d
     /tmp/ccwprL5w.s:1268   .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/ccwprL5w.s:1125   .rodata.str1.4:0000000000000000 $d
     /tmp/ccwprL5w.s:1163   .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccwprL5w.s:1149   .bss.conductance:0000000000000000 conductance
     /tmp/ccwprL5w.s:1177   .bss.sensorResistance:0000000000000000 sensorResistance
     /tmp/ccwprL5w.s:1156   .bss.current:0000000000000000 current
     /tmp/ccwprL5w.s:1184   .bss.voltageAOC:0000000000000000 voltageAOC
     /tmp/ccwprL5w.s:1170   .bss.msg:0000000000000000 msg
     /tmp/ccwprL5w.s:1211   .rodata.B_SMALL_RES:0000000000000000 B_SMALL_RES
     /tmp/ccwprL5w.s:1197   .rodata.A_SMALL_RES:0000000000000000 A_SMALL_RES
     /tmp/ccwprL5w.s:1204   .rodata.B_BIG_RES:0000000000000000 B_BIG_RES
     /tmp/ccwprL5w.s:1190   .rodata.A_BIG_RES:0000000000000000 A_BIG_RES
     /tmp/ccwprL5w.s:1260   .rodata.VOLT_IN:0000000000000000 VOLT_IN
     /tmp/ccwprL5w.s:1248   .rodata.RESISTOR_22:0000000000000000 RESISTOR_22
     /tmp/ccwprL5w.s:1254   .rodata.RESISTOR_47:0000000000000000 RESISTOR_47
     /tmp/ccwprL5w.s:1218   .rodata.MAX_RESOLUTION_VALUE:0000000000000000 MAX_RESOLUTION_VALUE
     /tmp/ccwprL5w.s:1225   .rodata.MULTIPLEXER_SENSORS:0000000000000000 MULTIPLEXER_SENSORS
     /tmp/ccwprL5w.s:1234   .rodata.MUX_SELECT_PINS:0000000000000000 MUX_SELECT_PINS
     /tmp/ccwprL5w.s:1145   .bss.conductance:0000000000000000 $d
     /tmp/ccwprL5w.s:1152   .bss.current:0000000000000000 $d
     /tmp/ccwprL5w.s:1159   .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccwprL5w.s:1166   .bss.msg:0000000000000000 $d
     /tmp/ccwprL5w.s:1173   .bss.sensorResistance:0000000000000000 $d
     /tmp/ccwprL5w.s:1180   .bss.voltageAOC:0000000000000000 $d
     /tmp/ccwprL5w.s:1187   .rodata.A_BIG_RES:0000000000000000 $d
     /tmp/ccwprL5w.s:1194   .rodata.A_SMALL_RES:0000000000000000 $d
ARM GAS  /tmp/ccwprL5w.s 			page 34


     /tmp/ccwprL5w.s:1201   .rodata.B_BIG_RES:0000000000000000 $d
     /tmp/ccwprL5w.s:1208   .rodata.B_SMALL_RES:0000000000000000 $d
     /tmp/ccwprL5w.s:1215   .rodata.MAX_RESOLUTION_VALUE:0000000000000000 $d
     /tmp/ccwprL5w.s:1221   .rodata.MULTIPLEXER_SENSORS:0000000000000000 $d
     /tmp/ccwprL5w.s:1230   .rodata.MUX_SELECT_PINS:0000000000000000 $d
     /tmp/ccwprL5w.s:1245   .rodata.RESISTOR_22:0000000000000000 $d
     /tmp/ccwprL5w.s:1251   .rodata.RESISTOR_47:0000000000000000 $d
     /tmp/ccwprL5w.s:1257   .rodata.VOLT_IN:0000000000000000 $d
     /tmp/ccwprL5w.s:1264   .rodata.defaultTask_attributes:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_Stop
HAL_ADC_GetValue
hadc3
hadc2
hadc1
__aeabi_ui2d
__aeabi_dmul
__aeabi_i2d
__aeabi_ddiv
__aeabi_dsub
pow
rmw_uros_set_custom_transport
rcutils_get_zero_initialized_allocator
rcutils_set_default_allocator
rcutils_get_default_allocator
rclc_support_init
rclc_node_init_default
rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Float64MultiArray
rclc_publisher_init_default
memset
printf
osDelay
rcl_publish
cubemx_transport_read
cubemx_transport_write
cubemx_transport_close
cubemx_transport_open
huart2
microros_allocate
microros_deallocate
microros_reallocate
microros_zero_allocate
osThreadNew
